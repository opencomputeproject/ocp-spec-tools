# Reusable workflow to render the spec for a variety of purposes.
# https://docs.github.com/en/actions/using-workflows/reusing-workflows

name: render

on:
  workflow_call:
    inputs:
      tcg-container:
        description: the Docker container to use (default is trustedcomputinggroup/pandoc)
        required: false
        type: string
        default: ghcr.io/trustedcomputinggroup/pandoc
      tcg-container-version:
        description: the released version of the Docker container to use
        required: true
        type: string
      ocp-template-ref:
        description: Git branch, tag or SHA for opencomputeproject/ocp-spec-tools template resources
        required: true
        type: string
      inputs:
        description: >-
          A JSON string representing a list of inputs to render. Each element must be an object with the following fields:

          - src (string): Path to source .ocp file
          - append_git_rev_to_version (bool): Append "(Git commit ${commit_hash})" to the version string
          - gh_pages_html (string): Path to write a directory holding a rendered index.html file
          - gh_pages_pdf (string): Path to write a directory holding a rendered PDF file
        required: true
        type: string

jobs:
  render:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.tcg-container }}:${{ inputs.tcg-container-version }}
    name: Render
    steps:
      - name: Checkout inputs
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.revision }}
          fetch-depth: 0
          fetch-tags: true

      - name: Checkout OCP template resources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          repository: "opencomputeproject/ocp-spec-tools"
          ref: ${{ inputs.ocp-template-ref }}
          path: "ocp-spec-tools"

      # Use input file and container version in the cache key so that the cache
      # is invalidated upon file change or container version change.
      - name: Restore cached files
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: "**/.cache/**/*"
          key: cache-${{ inputs.tcg-container-version }}-${{ inputs.ocp-template-ref }}-${{ github.run_id }}
          restore-keys: cache-${{ inputs.tcg-container-version }}-${{ inputs.ocp-template-ref }}

      - name: Perform rendering
        run: |
          # Let the container take ownership of the repo dir, in case the user wants to check in the results.
          # Workaround to https://github.com/actions/runner/issues/2033.
          chown -R $(id -u):$(id -g) $PWD

          echo '${{ inputs.inputs }}' | jq -c '.[]' | while read -r input; do
            src=$(echo "$input" | jq -r '.src')
            gh_pages_html=$(echo "$input" | jq -r '.gh_pages_html')
            gh_pages_pdf=$(echo "$input" | jq -r '.gh_pages_pdf')

            src_dirname=$(dirname "${src}")
            src_basename=$(basename "${src}")

            # The underlying tex and templates assume this exists under the "extra" folder.
            cp -R ocp-spec-tools "${src_dirname}/extra"

            commit_hash=$(git rev-parse --short HEAD)

            if echo "$input" | jq -e '.append_git_rev_to_version' > /dev/null; then
              echo "Appending git rev to version string in ${src}"

              # The sed command handles the following transformations:
              # `version: 1.3` --> `version: 1.3 (Git commit xyz)`
              # `version: "2.0"` --> `version: "2.0 (Git commit xyz)"`
              sed -i -r "/^---$/,/^---$/s/^(version: \"?[^\"]*)(\"?)$/\1 (Git commit ${commit_hash})\2/g" "${src}"
            fi

            if [[ -n "${gh_pages_html}" ]]; then
              echo "Rendering ${src} to ${gh_pages_html}/index.html"

              pushd "${src_dirname}"

              /usr/bin/build.sh \
                --nogitversion \
                --crossref=tcg \
                --csl extra/ocp-pandoc-resources/ieee.csl \
                --template_html extra/ocp-pandoc-resources/html/ocp.html.template \
                --html_stylesheet extra/ocp-pandoc-resources/html/style.css \
                --html=index.html \
                "${src_basename}"

              popd

              mkdir -p "${gh_pages_html}"
              mv "${src_dirname}/index.html" "gh-pages/${gh_pages_html}/"
            fi

            
          done
        shell: sh

      - name: Save cached files
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: "**/.cache/**/*"
          key: cache-${{ inputs.tcg-container-version }}-${{ inputs.ocp-template-ref }}-${{ github.run_id }}

      # Upload all workflow artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rendered-specs
          path: gh-pages
